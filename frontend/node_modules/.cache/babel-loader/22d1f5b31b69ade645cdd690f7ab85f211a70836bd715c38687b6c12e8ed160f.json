{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\nclass BackendApi {\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${BackendApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get the current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get companies (filtered by name if not undefined) */\n\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", {\n      name\n    });\n    return res.companies;\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get list of jobs (filtered by title if not undefined) */\n\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", {\n      title\n    });\n    return res.jobs;\n  }\n\n  /** Apply to a job */\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /** Get token for login from username, password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup for site. */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save user profile page. */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n  static async getSavedStocks(username) {\n    try {\n      const res = await this.request(`users/${username}/savedStocks`);\n      return res; // Access the savedStocks property of the response\n    } catch (err) {\n      console.error(\"Error fetching saved stocks:\", err);\n      throw err; // Throw the error to be handled by the caller\n    }\n  }\n  static async addSavedStock(username, symbol) {\n    let res = await this.request(`users/${username}/savedStocks`, {\n      symbol\n    }, \"post\");\n    return res.added;\n  }\n  static async removeSavedStock(username, savedStockId) {\n    let res = await this.request(`users/${username}/savedStocks/${savedStockId}`, {}, \"delete\");\n    return res.deleted;\n  }\n}\nexport default BackendApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","BackendApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCurrentUser","username","res","user","getCompanies","name","companies","getCompany","handle","company","getJobs","title","jobs","applyToJob","id","login","signup","saveProfile","getSavedStocks","addSavedStock","symbol","added","removeSavedStock","savedStockId","deleted"],"sources":["/Users/bradyflannery/Documents/Coding Projects/north_shore/frontend/src/api/BackEndAPI.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass BackendApi {\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${BackendApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get the current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get companies (filtered by name if not undefined) */\n\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", { name });\n    return res.companies;\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get list of jobs (filtered by title if not undefined) */\n\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  /** Apply to a job */\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /** Get token for login from username, password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup for site. */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save user profile page. */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async getSavedStocks(username) {\n    try {\n      const res = await this.request(`users/${username}/savedStocks`);\n      return res; // Access the savedStocks property of the response\n    } catch (err) {\n      console.error(\"Error fetching saved stocks:\", err);\n      throw err; // Throw the error to be handled by the caller\n    }\n  }\n  \n\n  static async addSavedStock(username, symbol) {\n    let res = await this.request(\n      `users/${username}/savedStocks`,\n      { symbol },\n      \"post\"\n    );\n    return res.added;\n  }\n\n  static async removeSavedStock(username, savedStockId) {\n    let res = await this.request(\n      `users/${username}/savedStocks/${savedStockId}`,\n      {},\n      \"delete\"\n    );\n    return res.deleted;\n  }\n}\n\n\nexport default BackendApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}